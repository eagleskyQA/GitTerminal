GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
touch eagle_skydive_hw_3.txt

 2. Сценарий перенесите в этот файл.
vim eagle_skydive_hw_3.txt

 3. На против каждого действия - напишите команду в GitBash
Хорошо ;)

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
На сайте github.com нажимаю зеленую кнопку NEW;
В поле "Repository name" ввожу "JSON";
Прокручиваю страницу до конца вниз и нажимаю "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.
В следующем окне копирую ссылку на репозиторий
В командной строке git ввожу: git clone https://github.com/eagleskyQA/JSON.git
Для удобства захожу в клонированную папку: cd JSON/

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "add new.json file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json; "I";

{
  "ФИО": "Климов Александр Николаевич",
  "Возраст": "27",
  "Количество домашних животных": "3",
  "Будущая желаемая зарплата": "300000"
}

"ESC";
:wq

 11. Отправить изменения на внешний репозиторий.
git add .
git commit -m "add info about me"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json; "I";

{
        "Любимый фильм": "Пираты карибского моря",
        "Любимый сериал": "Спартак",
        "Любимая еда": "Шаурма",
        "Любимое время года": "Лето",
        "Страна, которую хотели бы посетить": "Норвегия"
}

"ESC";
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim sklls.json; "I";

{
        "Скилы, которые будут изучены на курсе": "Git", "Postman", "JS", "Bug-Tracking system",
        "check-list creation", "Android studio", "Jmeter", "Charles and others"
}

"ESC";
:wq

 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json sklls.json
git commit -m "add 2 files with info about my preferences and my skills"
git push

 16. На веб интерфейсе создать файл bug_report.json.
На сайте github.com захожу в репозиторий JSON
Нажимаю на select button "Add files"
В выпадающем списке нажимаю кнопку "Create new file"
В текстовом поле "Name your file" ввожу "bug_report.json"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "Add bug_report.json file in reposirory"
Нажимаю кнопку "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Нажимаю на ссылку bug_report.json
Нажимаю на кнопку в виде карандаша "Edit this file"
Добавляю условный баг-репорт, взял его из задания Вадима о тестировании виджетов на мобилке"
Редактирую его под формат json
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "add bug-reort"

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаю кнопку "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
На сайте github.com нажимаю зеленую кнопку NEW;
В поле "Repository name" ввожу "XML";
Прокручиваю страницу до конца вниз и нажимаю "Create repository"

 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/eagleskyQA/XML.git

 23. Внутри локального XML создать файл “new.xml”.
cd XML/
touch new.xml

 24. Добавить файл под гит.
git add new.xml

 25. Закоммитить файл.
git commit -m "add new XML file"

 26. Отправить файл на внешний GitHub репозиторий.
git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml; I;

<req>
        <surname>Климов</surname>
        <name>Александр</name>
        <patronymic>Николавевич</patronymic>
        <age>27</age>
        <animals_number>3</animals_number>
        <future_salary>300000</future_salary>
</req>

"ESC";
:wq

 28. Отправить изменения на внешний репозиторий.
git add new.xml
git commit -m "add info about me in XML file"
git push

 29. Создать файл preferences.xml
touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml; "I";

<req>
        <favotire_movie>Пираты карибского моря</favotire_movie>
        <favotite_series>Спартак</favotite_series>
        <favorite_food>Шаурма</favorite_food>
        <favorite_season>Лето</favorite_season>
        <country_for_travel>Норвегия</country_for_travel>
</req>

"ESC"
:wq

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
touch sklls.xml
vim sklls.xml; "I";

<req>
        <skills>Git, Postman, Android Studio, JS, Jmeter, Charles, Bug-Tracking system</skills>
</req>

"ESC";
:wq

 32. Сделать коммит в одну строку.
git add preferences.xml sklls.xml; git commit -m "add info about my skills and preferences in XML files"

 33. Отправить сразу 2 файла на внешний репозиторий.
git push

 34. На веб интерфейсе создать файл bug_report.xml.
На сайте github.com захожу в репозиторий XML
Нажимаю на select button "Add files"
В выпадающем списке нажимаю кнопку "Create new file"
В текстовом поле "Name your file" ввожу "bug_report.xml"

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "Add bug_report.xml file in reposirory"
Нажимаю кнопку "Commit new file"

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
Нажимаю на ссылку bug_report.xml
Нажимаю на кнопку в виде карандаша "Edit this file"
Добавляю условный баг-репорт, взял его из задания Вадима о тестировании виджетов на мобилке"
Редактирую его под формат xml
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "add bug-reort in xml format"

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаю кнопку "Commit changes"

 38. Синхронизировать внешний и локальный репозиторий XML
git pull

 TXT
 1. Создать внешний репозиторий c названием TXT.
На сайте github.com нажимаю зеленую кнопку NEW;
В поле "Repository name" ввожу "TXT";
Прокручиваю страницу до конца вниз и нажимаю "Create repository"

 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/eagleskyQA/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
cd TXT/
touch new.txt

 4. Добавить файл под гит.
git add new.txt

 5. Закоммитить файл.
git commit -m "add new TXT file"

 6. Отправить файл на внешний GitHub репозиторий.
git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
vim new.txt; "I";

ФИО: Климов Алексакндр Николаевич;
Возраст: 27 лет;
Кол-во домашних животных: 3;
Будущая желаемая зарплата: 300000

"ESC";
:wq

 8. Отправить изменения на внешний репозиторий.
git add new.txt
git commit -m "add info about me in new TXT file"
git push

 9. Создать файл preferences.txt
touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
vim preferences.txt; "I";

Любимый фильм: Пираты карибского моря;
Любимый сериал: Спартак;
Любимая еда: шаверма;
Любимое время года: лето;
Страна, которую хотел бы посетить: Норвегия

"ESC";
:wq

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
touch sklls.txt
vim sklls.txt; "I";

Скилы, которые будут изучены на курсе:
Git, JS, Postman, Android studio, Jmeter, Charles, Bug-tracking system

"ESC";
:wq

 12. Сделать коммит в одну строку.
 git add preferences.txt sklls.txt; git commit -m "add info about my preferences and about skills, that will be studied on course"

 13. Отправить сразу 2 файла на внешний репозиторий.
git push

 14. На веб интерфейсе создать файл bug_report.txt.
На сайте github.com захожу в репозиторий TXT
Нажимаю на select button "Add files"
В выпадающем списке нажимаю кнопку "Create new file"
В текстовом поле "Name your file" ввожу "bug_report.txt"

 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "Add bug_report.txt file in reposirory"
Нажимаю кнопку "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Нажимаю на ссылку bug_report.txt
Нажимаю на кнопку в виде карандаша "Edit this file"
Добавляю условный баг-репорт, взял его из задания Вадима о тестировании виджетов на мобилке
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "add bug-reort in txt format"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаю кнопку "Commit changes"

 18. Синхронизировать внешний и локальный репозиторий TXT
git pull