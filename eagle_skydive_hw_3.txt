GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
touch eagle_skydive_hw_3.txt

 2. Сценарий перенесите в этот файл.
vim eagle_skydive_hw_3.txt

 3. На против каждого действия - напишите команду в GitBash
Хорошо ;)

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
На сайте github.com нажимаю зеленую кнопку NEW;
В поле "Repository name" ввожу "JSON";
Прокручиваю страницу до конца вниз и нажимаю "Create repository"

 5. Клонировать репозиторий JSON на локальный компьютер.
В следующем окне копирую ссылку на репозиторий
В командной строке git ввожу: git clone https://github.com/eagleskyQA/JSON.git
Для удобства захожу в клонированную папку: cd JSON/

 6. Внутри локального JSON создать файл “new.json”.
touch new.json

 7. Добавить файл под гит.
git add new.json

 8. Закоммитить файл.
git commit -m "add new.json file"

 9. Отправить файл на внешний GitHub репозиторий.
git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json; "I";

{
  "ФИО": "Климов Александр Николаевич",
  "Возраст": "27",
  "Количество домашних животных": "3",
  "Будущая желаемая зарплата": "300000"
}

"ESC";
:wq

 11. Отправить изменения на внешний репозиторий.
git add .
git commit -m "add info about me"
git push

 12. Создать файл preferences.json
touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json; "I";

{
        "Любимый фильм": "Пираты карибского моря",
        "Любимый сериал": "Спартак",
        "Любимая еда": "Шаурма",
        "Любимое время года": "Лето",
        "Страна, которую хотели бы посетить": "Норвегия"
}

"ESC";
:wq

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim sklls.json; "I";

{
        "Скилы, которые будут изучены на курсе": "Git", "Postman", "JS", "Bug-Tracking system",
        "check-list creation", "Android studio", "Jmeter", "Charles and others"
}

"ESC";
:wq

 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json sklls.json
git commit -m "add 2 files with info about my preferences and my skills"
git push

 16. На веб интерфейсе создать файл bug_report.json.
На сайте github.com захожу в репозиторий JSON
Нажимаю на select button "Add files"
В выпадающем списке нажимаю кнопку "Create new file"
В текстовом поле "Name your file" ввожу "bug_report.json"

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "Add bug_report.json file in reposirory"
Нажимаю кнопку "Commit new file"

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Нажимаю на ссылку bug_report.json
Нажимаю на кнопку в виде карандаша "Edit this file"
Добавляю условный баг-репорт, взял его из задания Вадима о тестировании виджетов на мобилке"
Редактирую его под формат json
Скролю страницу вниз до конца
В текстовом поле "Add an optional extended description" ввожу "add bug-reort"

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Нажимаю кнопку "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 23. Внутри локального XML создать файл “new.xml”.
 24. Добавить файл под гит.
 25. Закоммитить файл.
 26. Отправить файл на внешний GitHub репозиторий.
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 28. Отправить изменения на внешний репозиторий.
 29. Создать файл preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML

 TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 3. Внутри локального TXT создать файл “new.txt”.
 4. Добавить файл под гит.
 5. Закоммитить файл.
 6. Отправить файл на внешний GitHub репозиторий.
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 12. Сделать коммит в одну строку.
 13. Отправить сразу 2 файла на внешний репозиторий.
 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
